// Code generated by protoc-gen-go. DO NOT EDIT.
// source: find.proto

package find

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserId struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_701393f70b865f1c, []int{0}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Response struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Firstname            string   `protobuf:"bytes,2,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname             string   `protobuf:"bytes,3,opt,name=lastname,proto3" json:"lastname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_701393f70b865f1c, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Response) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Response) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func init() {
	proto.RegisterType((*UserId)(nil), "find.UserId")
	proto.RegisterType((*Response)(nil), "find.Response")
}

func init() {
	proto.RegisterFile("find.proto", fileDescriptor_701393f70b865f1c)
}

var fileDescriptor_701393f70b865f1c = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcb, 0xcc, 0x4b,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xe4, 0xb8, 0xd8, 0x42, 0x8b,
	0x53, 0x8b, 0x3c, 0x53, 0x84, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0xa5, 0x10, 0x2e, 0x8e, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc,
	0xe2, 0x54, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0xa8, 0x34, 0x53, 0x66, 0x8a, 0x90, 0x0c, 0x17,
	0x67, 0x5a, 0x66, 0x51, 0x71, 0x49, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0x13, 0x58, 0x18, 0x21, 0x20,
	0x24, 0xc5, 0xc5, 0x91, 0x93, 0x08, 0x95, 0x64, 0x06, 0x4b, 0xc2, 0xf9, 0x46, 0xce, 0x5c, 0x62,
	0xee, 0x45, 0x05, 0xc9, 0x20, 0x9b, 0xdd, 0x32, 0xf3, 0x52, 0x9c, 0xf3, 0xf3, 0x4a, 0x8a, 0xf2,
	0x73, 0x72, 0x52, 0x8b, 0x84, 0x34, 0xb9, 0xd8, 0x5d, 0x2b, 0x52, 0x93, 0x4b, 0x4b, 0x52, 0x85,
	0x78, 0xf4, 0xc0, 0xae, 0x85, 0x38, 0x4f, 0x8a, 0x0f, 0xc2, 0x83, 0x39, 0x46, 0x89, 0x21, 0x89,
	0x0d, 0xec, 0x0f, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x57, 0x45, 0x54, 0xd5, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrpcUserFindControllerClient is the client API for GrpcUserFindController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcUserFindControllerClient interface {
	Execute(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Response, error)
}

type grpcUserFindControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewGrpcUserFindControllerClient(cc grpc.ClientConnInterface) GrpcUserFindControllerClient {
	return &grpcUserFindControllerClient{cc}
}

func (c *grpcUserFindControllerClient) Execute(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/find.GrpcUserFindController/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcUserFindControllerServer is the server API for GrpcUserFindController service.
type GrpcUserFindControllerServer interface {
	Execute(context.Context, *UserId) (*Response, error)
}

// UnimplementedGrpcUserFindControllerServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcUserFindControllerServer struct {
}

func (*UnimplementedGrpcUserFindControllerServer) Execute(ctx context.Context, req *UserId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterGrpcUserFindControllerServer(s *grpc.Server, srv GrpcUserFindControllerServer) {
	s.RegisterService(&_GrpcUserFindController_serviceDesc, srv)
}

func _GrpcUserFindController_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcUserFindControllerServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/find.GrpcUserFindController/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcUserFindControllerServer).Execute(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcUserFindController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "find.GrpcUserFindController",
	HandlerType: (*GrpcUserFindControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _GrpcUserFindController_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "find.proto",
}
